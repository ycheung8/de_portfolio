/* TABLE 1: CREATE THE PATIENT DENOMINATOR FOR HPV AGE: 11 UP TO 19*/
DROP TABLE HPVCOHORT;
CREATE TABLE HPVCOHORT (	
  "VISITLOCATION"       VARCHAR2(100 BYTE), 
	"VISITPROVIDER"       VARCHAR2(100 BYTE), 
	"PROVIDERSPECIALTY"   VARCHAR2(100 BYTE), 
	"PROXY_MRN"                 NVARCHAR2(255), 
	"PATIENTNAME"         VARCHAR2(100 BYTE), 
	"DOB"                 DATE, 
	"GENDER"              VARCHAR2(20 BYTE), 
	"CURRENTAGE"          NUMBER, 
	"VISITAGE"            NUMBER, 
	"PCPHOMEFACILITY"     VARCHAR2(100 BYTE), 
	"PCP"                 VARCHAR2(100 BYTE), 
	"PCPSPECIALTY"        VARCHAR2(100 BYTE), 
	"LASTVISITWPCP24MO"   DATE, 
	"LASTOFFICVISIT"       DATE, 
	"PERIOD"              VARCHAR2(40 BYTE),
  "TXFLAG"              VARCHAR2(20 BYTE),
  "HPVCOUNT"            NUMBER,
  "VALIDHPVCOUNT"       NUMBER,
  "FORECASTDOSE"        VARCHAR2(50 BYTE),
  "EARLIESTDATE"        DATE,
  "RECOMMENDEDDATE"     DATE,
  "UPTODATE"            VARCHAR2(50 BYTE), -- UTD: YES/NO
  "DATEOFDOSE1"         DATE,
  "DATEOFDOSE2"         DATE,
  "DATEOFDOSE3"         DATE,
  "DATEOFDOSE4"         DATE
   )
;
-- END OF TABLE CREATION
INSERT INTO HPVCOHORT
WITH RPTDATES AS (
  SELECT  TO_DATE('2000-09-01','YYYY-MM-DD') AS RPTSTART, 
          TO_DATE('2000-10-01','YYYY-MM-DD') AS RPTEND,   
          TO_DATE('2017-09-01','YYYY-MM-DD') AS OBSSTART, 
          TO_DATE('2000-10-01','YYYY-MM-DD') AS OBSEND   
  FROM DUAL
)

/*** CREATE HPVCOUNT FOR CHECKS AND BALANCES: CHECK IF HPVCOUNT 
*/
CREATE TABLE HPVCOUNT AS

SELECT  IM.PROXY_MRN,
        PT.PATIENTDISPLAYNAME,
        PT.DOB,
        COUNT(DISTINCT IMMUNIZATIONID) AS TCT

FROM IMMUNIZATIONS@SAMPLEDATA.ORG IM
INNER JOIN YCHEUNG.HPVCOHORT COHORT              ON COHORT.PROXY_MRN = IM.PROXY_MRN
INNER JOIN PATIENTS@SAMPLEDATA.ORG PT ON IM.PROXY_MRN = PT.PROXY_MRN

WHERE IM.IMMADMINTYPEID = 1 -- 1 MEANS GIVEN
  AND IMMUNIZATIONTYPEID = 1 -- HPV IS 1
  GROUP BY IM.PROXY_MRN, PT.PATIENTDISPLAYNAME, PT.DOB
; 
/*
MERGE HPV COUNT. 0 IS THE DEFAULT VALUE FOR HPVCOHORT.HPVCOUNT, THIS CHANGES
THAT VALUE WITH A COUNT > 0 IF FOUND IN IMMUNIZATION TABLE.
*/

MERGE INTO YCHEUNG.HPVCOHORT COHORT
USING 
( 
SELECT  IM.PROXY_MRN,
        PT.PATIENTDISPLAYNAME,
        PT.DOB,
        COUNT(DISTINCT IMMUNIZATIONID) AS CT
  
FROM IMMUNIZATIONS@SAMPLEDATA.ORG IM
INNER JOIN YCHEUNG.HPVCOHORT COHORT           ON COHORT.PROXY_MRN = IM.PROXY_MRN
INNER JOIN PATIENTS@SAMPLEDATA.ORG PT   ON IM.PROXY_MRN = PT.PROXY_MRN

WHERE IM.IMMADMINTYPEID  = 1 -- 1 MEANS GIVEN
  AND IMMUNIZATIONTYPEID = 1 -- HPV IS 1

GROUP BY IM.PROXY_MRN, PT.PATIENTDISPLAYNAME, PT.DOB
) HPVCT1 ON (COHORT.PROXY_MRN = HPVCT1.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET COHORT.HPVCOUNT = HPVCT1.CT;
COMMIT;
/*CREATE TABLE LISTING ALL HPVDOSES, WHETHER VALID OR INVALID
*/
--DROP TABLE YCHEUNG.HPVDOSESSEPT1718;
CREATE TABLE HPVDOSES (
	"PROXY_MRN"                 NVARCHAR2(255), 
	"PATIENTNAME"         VARCHAR2(100 BYTE), 
	"DOB"                 DATE, 
	"GENDER"              VARCHAR2(20 BYTE),  
  "IMMUNIZATIONID"      VARCHAR2(20 BYTE),
  "SOURCESYSTEMDESC"    VARCHAR2(100 BYTE),
  "INADVERTENT"         NUMBER,
  "DOSE"                NUMBER,
  "IMMUNIZATIONDATE"    DATE,
  "AGEATADMIN"          NUMBER,
  "AGEOFDOSE1"          NUMBER,
  "DATEOFDOSE1"         DATE,
  "DATEOFDOSE2"         DATE,
  "DATEOFDOSE3"         DATE,
  "DATEOFDOSE4"         DATE
   )
;
INSERT INTO HPVDOSES
WITH HPVDOSESF1 AS (
SELECT  IM.PROXY_MRN,
        COHORT.PATIENTNAME,
        COHORT.DOB,
        COHORT.GENDER,
        IM.IMMUNIZATIONID,
        SUBSTR(IM.SOURCESYSTEMDESC,1,9) AS SOURCESYSTEMDESC,
        CASE  WHEN  SOURCESYSTEMDESC IN ('HPV BIVALENT') 
                    AND   GENDER IN ('M')
              THEN  1
              ELSE  0
              END   "INADVERTENT",
        ROW_NUMBER() OVER (PARTITION BY IM.PROXY_MRN ORDER BY IM.IMMUNIZATIONDATE) AS DOSE,
        IM.IMMUNIZATIONDATE,
        TRUNC(MONTHS_BETWEEN(IM.IMMUNIZATIONDATE,COHORT.DOB)/12) AS "AGEATADMIN"
        
FROM IMMUNIZATIONS@SAMPLEDATA.ORG IM
INNER JOIN YCHEUNG.HPVCOHORT COHORT      ON IM.PROXY_MRN = COHORT.PROXY_MRN

WHERE IM.IMMADMINTYPEID = 1 -- 1 MEANS GIVEN
  AND IMMUNIZATIONTYPEID = 1 -- HPV IS 1
)
SELECT  PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        SOURCESYSTEMDESC,
        INADVERTENT,
        DOSE,
        IMMUNIZATIONDATE,
        AGEATADMIN,
        NVL(  TRUNC(MONTHS_BETWEEN( (SELECT IMMUNIZATIONDATE FROM HPVDOSESF1 T WHERE (T.PROXY_MRN = HPVDOSESF1.PROXY_MRN) AND T.DOSE = 1), HPVDOSESF1.DOB)/12),
              TRUNC(MONTHS_BETWEEN( TO_DATE('2000-09-30','YYYY-MM-DD'), HPVDOSESF1.DOB)/12) ) AS AGEOFDOSE1,
        (SELECT IMMUNIZATIONDATE FROM HPVDOSESF1 T1 WHERE (T1.PROXY_MRN = HPVDOSESF1.PROXY_MRN AND T1.DOSE = 1) ) AS DATEOFDOSE1,
        (SELECT IMMUNIZATIONDATE FROM HPVDOSESF1 T2 WHERE (T2.PROXY_MRN = HPVDOSESF1.PROXY_MRN AND T2.DOSE = 2) ) AS DATEOFDOSE2,
        (SELECT IMMUNIZATIONDATE FROM HPVDOSESF1 T3 WHERE (T3.PROXY_MRN = HPVDOSESF1.PROXY_MRN AND T3.DOSE = 3) ) AS DATEOFDOSE3, 
        (SELECT IMMUNIZATIONDATE FROM HPVDOSESF1 T4 WHERE (T4.PROXY_MRN = HPVDOSESF1.PROXY_MRN AND T4.DOSE = 4) ) AS DATEOFDOSE4
FROM HPVDOSESF1
ORDER BY PROXY_MRN, IMMUNIZATIONDATE
;

/* 
EVALUATE FORECAST FOR INDIVIDUALS WITH 0 VACCINES LISTED
*/
-- CASE WHEN HPVCOUNT IS 0 THEN USE THIS CTE TO FORECAST THE FIRST HPV DOSE
/*** MERGE DATE OF HPV DOSES REGARDLESS OF HPV VALID STATUS 
THIS IS TO HELP FACILITATE CHART REVIEWS
***/
-- DATE OF DOSE 1
MERGE INTO HPVCOHORT COHORT
USING 
(
SELECT  PROXY_MRN,
        DATEOFDOSE1,
        DATEOFDOSE2,
        DATEOFDOSE3,
        DATEOFDOSE4,
        DOSE
FROM HPVDOSES
) HPVALLDOSES ON (COHORT.PROXY_MRN = HPVALLDOSES.PROXY_MRN AND HPVALLDOSES.DOSE = 1)
WHEN MATCHED THEN UPDATE SET  COHORT.DATEOFDOSE1 = HPVALLDOSES.DATEOFDOSE1
;
COMMIT;
-- DATE OF DOSE 2
MERGE INTO HPVCOHORT COHORT
USING 
(
SELECT  PROXY_MRN,
        DATEOFDOSE1,
        DATEOFDOSE2,
        DATEOFDOSE3,
        DATEOFDOSE4,
        DOSE
FROM HPVDOSES
) HPVALLDOSES ON (COHORT.PROXY_MRN = HPVALLDOSES.PROXY_MRN AND HPVALLDOSES.DOSE = 2)
WHEN MATCHED THEN UPDATE SET  COHORT.DATEOFDOSE2 = HPVALLDOSES.DATEOFDOSE2
;
-- DATE OF DOSE 3
MERGE INTO HPVCOHORT COHORT
USING
(
SELECT  PROXY_MRN,
        DATEOFDOSE1,
        DATEOFDOSE2,
        DATEOFDOSE3,
        DATEOFDOSE4,
        DOSE
FROM HPVDOSES
) HPVALLDOSES ON (COHORT.PROXY_MRN = HPVALLDOSES.PROXY_MRN AND HPVALLDOSES.DOSE = 3)
WHEN MATCHED THEN UPDATE SET  COHORT.DATEOFDOSE3 = HPVALLDOSES.DATEOFDOSE3
;
-- DATE OF DOSE 4
MERGE INTO HPVCOHORT COHORT
USING
(
SELECT  PROXY_MRN,
        DATEOFDOSE1,
        DATEOFDOSE2,
        DATEOFDOSE3,
        DATEOFDOSE4,
        DOSE
FROM HPVDOSES
) HPVALLDOSES ON (COHORT.PROXY_MRN = HPVALLDOSES.PROXY_MRN AND HPVALLDOSES.DOSE = 4)
WHEN MATCHED THEN UPDATE SET  COHORT.DATEOFDOSE4 = HPVALLDOSES.DATEOFDOSE4
;
COMMIT;

/** FORECAST EARLIEST AND RECOMMENDED HPV DOSE WHEN HPV COUNT = 0 **/
MERGE INTO YCHEUNG.HPVCOHORT COHORT 
USING 
(
SELECT  DOSE0.PROXY_MRN,
        DOSE0.PATIENTNAME,
        DOSE0.DOB,
        DOSE0.GENDER,
        DOSE0.DOSE,
        DOSE0.AGEOFDOSE1,
        FORECASTSCH.FORECASTDOSE,
        ADD_MONTHS(DOSE0.DOB,MINAGE*12)            AS "EARLIESTDATE",
        ADD_MONTHS(DOSE0.DOB,RECINTERVALFROMPREV)  AS "RECOMMENDEDDATE"
FROM (
SELECT  COHORT.PROXY_MRN,  
        COHORT.PATIENTNAME,
        COHORT.DOB,
        COHORT.GENDER,
        COHORT.HPVCOUNT,
        CAST (0 AS NUMBER) AS DOSE,
        TRUNC(MONTHS_BETWEEN( TO_DATE('2000-09-30','YYYY-MM-DD'), COHORT.DOB)/12) AS AGEOFDOSE1
FROM  YCHEUNG.HPVCOHORT COHORT
WHERE COHORT.HPVCOUNT IN (0)
) DOSE0
LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE FORECASTSCH ON (
                        
                        FORECASTSCH.DOSE = (DOSE0.DOSE)
                    AND FORECASTSCH.INITAGEMIN <= DOSE0.AGEOFDOSE1
                    AND FORECASTSCH.INITAGEMAX >= DOSE0.AGEOFDOSE1
                    )
) HPVDOSE0 ON (COHORT.PROXY_MRN = HPVDOSE0.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET  COHORT.FORECASTDOSE     = HPVDOSE0.FORECASTDOSE,
                              COHORT.EARLIESTDATE     = HPVDOSE0.EARLIESTDATE,
                              COHORT.RECOMMENDEDDATE  = HPVDOSE0.RECOMMENDEDDATE
;
COMMIT;
/* INSERT FOR DOSES 1-4 */
/*CREATE VALIDHPVDOSE*/
DROP TABLE VALIDHPVDOSES;
CREATE TABLE VALIDHPVDOSES (
  "NEWDOSE"           NUMBER,
  "PROXY_MRN"               NVARCHAR2(255),
  "PATIENTNAME"       VARCHAR2(100),
  "DOB"               DATE,
  "GENDER"            VARCHAR2(10),
  "IMMUNIZATIONID"    NUMBER,
  "AGEATADMIN"        NUMBER,
  "IMMUNIZATIONDATE"  DATE,
  "INADVERTENT"       NUMBER,
  "NEWAGEOFDOSE1"     NUMBER,
  "NEWDATEOFDOSE1"    DATE,
  "VALIDDOSE1"        NUMBER,
  "NEWDATEOFDOSE2"    DATE,
  "VALIDDOSE2"        NUMBER,
  "VALIDDOSE3"        NUMBER,
  "INVALIDDOSE3"      DATE,
  "INVALIDFLAG"       NUMBER,
  "RULEINDEX"         NUMBER,
  "SCHEDULETYPEID"    NUMBER,
  "HPVCOUNT"          NUMBER
)
;

INSERT INTO VALIDHPVDOSES
-- START CTE
WITH INADVERTENTMAX AS (
SELECT    PROXY_MRN,
          MAX(IMMUNIZATIONDATE) AS LASTINADVDOSE
          
FROM      YCHEUNG.HPVDOSES
WHERE     INADVERTENT IN (1) -- FLAG INADVERTENT HPV DOSES GIVEN TO MALES
GROUP BY  PROXY_MRN
) 
,
HPVDOSE1 AS (
SELECT  ROW_NUMBER() OVER (PARTITION BY PROXY_MRN ORDER BY IMMUNIZATIONDATE) AS NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        SOURCESYSTEMDESC,
        INADVERTENT,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        DOSE,
        PRIORDOSE,
        RULEINDEX,
        VALIDDOSE1    
FROM (
SELECT  
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        SOURCESYSTEMDESC,
        INADVERTENT,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        HPVDOSES.DOSE,
        AGEOFDOSE1,
        DATEOFDOSE1, 
        DATEOFDOSE2, 
        MONTHS_BETWEEN(DATEOFDOSE2,DATEOFDOSE1) AS MONTHSBETWEENDOSE1AND2,
        HXSCH.PRIORDOSE,
        HXSCH.MININTERVALFROMDOSE1, 
        HXSCH.INTERVALS,      
        HXSCH.RULEINDEX,
        CASE  WHEN (   (IMMUNIZATIONDATE >= (ADD_MONTHS(DOB,HXSCH.MINAGE*12) - 4 ))
                   AND (AGEATADMIN <= HXSCH.MAXAGE)
                   )
              THEN  1
              ELSE  0     -- 0 FOR INVALID
              END "VALIDDOSE1"

FROM YCHEUNG.HPVDOSES HPVDOSES

LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE HXSCH ON (
              (         HXSCH.PRIORDOSE  = HPVDOSES.DOSE
                    AND HXSCH.INITAGEMIN <= HPVDOSES.AGEATADMIN
                    AND HXSCH.INITAGEMAX >= HPVDOSES.AGEATADMIN
              )
              
          OR  (         HPVDOSES.DOSE >= HXSCH.DOSE
                    AND HPVDOSES.DOSE <  HXSCH.MAXDOSE
                    AND HXSCH.INITAGEMIN <= HPVDOSES.AGEATADMIN
                    AND HXSCH.INITAGEMAX >= HPVDOSES.AGEATADMIN
              )
                                                 ) 
LEFT OUTER JOIN YCHEUNG.LOOKUPSCHEDULETYPE LUST ON HXSCH.SCHEDULETYPEID = LUST.SCHEDULETYPEID
) DOSE1

WHERE ( ( VALIDDOSE1 = 1    -- INCLUDE DOSES ELIGIBLE TO BE ASSIGNED AS DOSE #1
          OR DOSE IN (0)    -- INCLUDE DOSE # =  0
          OR DOSE > 3       -- INCLUDE DOSE # >  3
        )
        AND INADVERTENT IN (0) -- THIS REMOVES INADVERTENT FROM VACCINE LIST
      )
      
ORDER BY PROXY_MRN, DOSE
)
,
RECALCHPVDOSE1 AS (
SELECT  NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        VALIDDOSE1,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        NEWDATEOFDOSE2,
--------------------RECALCULATE NEW INTERVAL BETWEEN DOSE 1 AND 2-----------------------------
        NVL(MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1),0)       AS NEWMONTHSFROMDOSE1AND2, 
        (NEWDATEOFDOSE2 - NEWDATEOFDOSE1)                           AS NEWDAYSFROMDOSE1AND2,
--------------------RECALCULATE MONTHS BETWEEN DOSE 1 AND CURRENT DOSE------------------------
        NVL(MONTHS_BETWEEN(IMMUNIZATIONDATE, NEWDATEOFDOSE1),0)  AS NEWMONTHSFROMDOSE1,
        COUNT(IMMUNIZATIONDATE) OVER (PARTITION BY PROXY_MRN) AS HPVCOUNT
FROM (
SELECT  NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        VALIDDOSE1,
--------------------RECALCULATE NEW AGE OF DOSE 1---------------------------------------------
        TRUNC(MONTHS_BETWEEN(( SELECT IMMUNIZATIONDATE FROM HPVDOSE1 T1 
                               WHERE ( (T1.PROXY_MRN = HPVDOSE1.PROXY_MRN)
                               AND (T1.NEWDOSE = 1)) ), DOB )/12) AS NEWAGEOFDOSE1,    
--------------------RECALCULATE NEW DATE OF DOSE 1--------------------------------------------
        (SELECT IMMUNIZATIONDATE FROM HPVDOSE1 T1 WHERE ( (T1.PROXY_MRN = HPVDOSE1.PROXY_MRN)
                                                      AND (T1.NEWDOSE = 1))   )
                                                      AS NEWDATEOFDOSE1,
--------------------RECALCULATE NEW DATE OF DOSE 2--------------------------------------------
        (SELECT IMMUNIZATIONDATE FROM HPVDOSE1 T2 WHERE ( (T2.PROXY_MRN = HPVDOSE1.PROXY_MRN)
                                                      AND (T2.NEWDOSE = 2))   )
                                                      AS NEWDATEOFDOSE2
FROM HPVDOSE1
)
) -- END OF CTE
,
HPVDOSE2 AS (
SELECT  ROW_NUMBER() OVER (PARTITION BY PROXY_MRN ORDER BY IMMUNIZATIONDATE) AS NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        NEWDATEOFDOSE2,
        NEWMONTHSFROMDOSE1,
        NVL(MONTHS_BETWEEN(IMMUNIZATIONDATE, (LAG(IMMUNIZATIONDATE) OVER (PARTITION BY PROXY_MRN
                                                                          ORDER BY IMMUNIZATIONDATE))),0)
                                                                          AS NEWMONTHSFROMDOSE1AND2,
        INITAGEMIN,
        INITAGEMAX,
        RULEINDEX,
        SCHEDULETYPEID,
        VALIDDOSE1,
        VALIDDOSE2,
        COUNT(IMMUNIZATIONDATE) OVER (PARTITION BY PROXY_MRN) AS HPVCOUNT
FROM (
SELECT  ROW_NUMBER() OVER (PARTITION BY PROXY_MRN ORDER BY IMMUNIZATIONDATE) AS NEWDOSE,
        HPVCOUNT,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        NEWDATEOFDOSE2,
        -- COMPARE INTERVAL BETWEEN ALL IMMUNIZATIONDATES AND DATEOFDOSE1
        NEWMONTHSFROMDOSE1,
        NEWMONTHSFROMDOSE1AND2,
        HXSCH.RULEINDEX,
        HXSCH.MININTERVALFROMDOSE1AND2,
        HXSCH.SCHEDULEINTERVAL3DOSE,
        HXSCH.INITAGEMAX,
        HXSCH.INITAGEMIN,
        HXSCH.SCHEDULEINTERVAL2DOSE,
        HXSCH.SCHEDULEINTERVAL3DOSE,
        LAGMININTERVALFROMDOSE2,
        -- EXCEPTION HANDLING: IF PATIENT DOES NOT MEET ANY OF THE TRADITIONAL RULES, THEN ASSIGN TO SCHEDULE 99
        CASE  WHEN HXSCH.SCHEDULETYPEID IS NULL
              THEN 99
              ELSE HXSCH.SCHEDULETYPEID
              END "SCHEDULETYPEID",
        RECALCHPVDOSE1.VALIDDOSE1,
        CASE  WHEN RECALCHPVDOSE1.NEWDOSE IN (1)
              THEN NULL
              ELSE
              -- DOSE 2, 2-DOSE SCHEDULE, MININTERVAL: (5 MONTHS - 5 DAYS) OR 4.838 MONTHS
                CASE  WHEN  (HXSCH.SCHEDULETYPEID IN (2) --AND RECALCHPVDOSE1.NEWDOSE IN (2)
                        AND (IMMUNIZATIONDATE >= (ADD_MONTHS(NEWDATEOFDOSE1, HXSCH.LAGMININTERVALFROMDOSE1) - 4 ))
                        AND (NEWMONTHSFROMDOSE1AND2 >= HXSCH.LAGMININTERVALFROMDOSE2) 
                            )
                      THEN 1
                      ELSE
              -- DOSE 2, 3-DOSE SCHEDULE, MININTERVAL: 28 DAYS
                 CASE  WHEN HXSCH.SCHEDULETYPEID IN (3)
                       THEN
                          CASE  WHEN ( IMMUNIZATIONDATE >= ((NEWDATEOFDOSE1 + HXSCH.LAGMININTERVALFROMDOSE1) - 4)
                                      )
                                THEN 1                         
                                ELSE 99  -- EXCEPTION HANDLING: HPV DOSE 2 (2-DOSE SCHEDULE) DID NOT MEET MIN INTERVAL OF 28 DAYS OR JOINED TO WRONG RULE INDEX
                                END
                        ELSE 100  -- EXCEPTION HANDLING: HPV DOSE 2 (3-DOSE SCHEDULE) DID NOT MEET MIN INTERVAL OF 5 MONTHS OR JOINED TO WRONG RULE INDEX
                                  -- DOSES THAT EXCEED 3 DOSES WILL CATCH THIS EXCEPTION
                        END
                      END 
               END "VALIDDOSE2"

FROM RECALCHPVDOSE1

LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE HXSCH

  ON (  
-- JOIN TO 3-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS <= 4.8387 (SCHEDULEINTERVAL3DOSE)
        (HXSCH.PRIORDOSE = RECALCHPVDOSE1.NEWDOSE
         AND RECALCHPVDOSE1.NEWMONTHSFROMDOSE1AND2 <= HXSCH.SCHEDULEINTERVAL3DOSE)
         AND NEWMONTHSFROMDOSE1AND2 NOT IN (0)
         )
      OR
-- JOIN TO 2-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS >= 4.8709 (SCHEDULEINTERVAL2DOSE) AND AGEOFDOSE1 < 15 YEARS OLD
        (   (HXSCH.PRIORDOSE = RECALCHPVDOSE1.NEWDOSE
            AND (RECALCHPVDOSE1.NEWMONTHSFROMDOSE1AND2 >= HXSCH.SCHEDULEINTERVAL2DOSE 
                 OR RECALCHPVDOSE1.NEWMONTHSFROMDOSE1AND2 IN (0) 
                )
            AND RECALCHPVDOSE1.NEWAGEOFDOSE1 <= HXSCH.INITAGEMAX 
            AND RECALCHPVDOSE1.NEWAGEOFDOSE1 >= HXSCH.INITAGEMIN
            )
         ) 
      OR
--JOIN TO 3-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS >= 4.8709 (SCHEDULEINTERVALMISC) AND AGEOFDOSE 1 >= 15 YEARS OLD
        (HXSCH.PRIORDOSE  =  RECALCHPVDOSE1.NEWDOSE
         AND RECALCHPVDOSE1.NEWMONTHSFROMDOSE1AND2 >= HXSCH.SCHEDULEINTERVALMISC
         AND RECALCHPVDOSE1.NEWAGEOFDOSE1 >= HXSCH.INITAGEMIN )
         
) -- END OF SUBQUERY
WHERE ( VALIDDOSE2 IN (1)                            -- INCLUDE DOSE2
        OR  (VALIDDOSE1 IN (1) AND NEWDOSE IN (1) )  -- INCLUDE DOSE1
        OR  (NEWDOSE > 3 )                           -- INCLUDE DOSE # > 3
      )
) -- END OF CTE
,
REASSESSHPVSCHEDULE AS (
SELECT  NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        NEWDATEOFDOSE2,
        NEWMONTHSFROMDOSE1,
        NEWMONTHSFROMDOSE1AND2,
        HXSCH2.INITAGEMIN,
        HXSCH2.INITAGEMAX,
        HXSCH2.RULEINDEX,
        HXSCH2.SCHEDULETYPEID,
        VALIDDOSE1,
        VALIDDOSE2,
        HPVCOUNT
FROM HPVDOSE2
LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE HXSCH2

  ON (  
-- JOIN TO 3-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS <= 4.8387 (SCHEDULEINTERVAL3DOSE)
        (HXSCH2.PRIORDOSE = HPVDOSE2.NEWDOSE
         AND HPVDOSE2.NEWMONTHSFROMDOSE1AND2 <= HXSCH2.SCHEDULEINTERVAL3DOSE)
         AND NEWMONTHSFROMDOSE1AND2 NOT IN (0)
         )
      OR
-- JOIN TO 2-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS >= 4.8709 (SCHEDULEINTERVAL2DOSE) AND AGEOFDOSE1 < 15 YEARS OLD
        (   (HXSCH2.PRIORDOSE = HPVDOSE2.NEWDOSE
            AND (HPVDOSE2.NEWMONTHSFROMDOSE1AND2 >= HXSCH2.SCHEDULEINTERVAL2DOSE 
                 OR HPVDOSE2.NEWMONTHSFROMDOSE1AND2 IN (0) 
                )
            AND HPVDOSE2.NEWAGEOFDOSE1 <= HXSCH2.INITAGEMAX 
            AND HPVDOSE2.NEWAGEOFDOSE1 >= HXSCH2.INITAGEMIN
            )
         ) 
      OR
--JOIN TO 3-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS >= 4.8709 (SCHEDULEINTERVALMISC) AND AGEOFDOSE 1 >= 15 YEARS OLD
        (HXSCH2.PRIORDOSE  =  HPVDOSE2.NEWDOSE
         AND HPVDOSE2.NEWMONTHSFROMDOSE1AND2 >= HXSCH2.SCHEDULEINTERVALMISC
         AND HPVDOSE2.NEWAGEOFDOSE1 >= HXSCH2.INITAGEMIN )
) -- END OF CTE
,
HPVDOSE3 AS (
SELECT  ROW_NUMBER() OVER (PARTITION BY PROXY_MRN ORDER BY IMMUNIZATIONDATE) AS NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        (SELECT IMMUNIZATIONDATE FROM REASSESSHPVSCHEDULE T2 
         WHERE (T2.PROXY_MRN = REASSESSHPVSCHEDULE.PROXY_MRN AND T2.NEWDOSE = 2)) AS NEWDATEOFDOSE2,
        NVL(MONTHS_BETWEEN(IMMUNIZATIONDATE, (LAG(IMMUNIZATIONDATE) OVER (PARTITION BY PROXY_MRN
                                                                          ORDER BY IMMUNIZATIONDATE))),0)
                                                                          AS NEWMONTHSFROMPREVIOUSDOSE,
        NEWMONTHSFROMDOSE1AND2,
        INITAGEMIN,
        INITAGEMAX,
        RULEINDEX,
        SCHEDULETYPEID,
        COUNT(IMMUNIZATIONDATE) OVER (PARTITION BY PROXY_MRN) AS HPVCOUNT,
        VALIDDOSE1,
        VALIDDOSE2,
        CASE  WHEN (   (IMMUNIZATIONDATE - NEWDATEOFDOSE1) >= 112
                          --AND NEWDOSE IN (3)  
                   AND (IMMUNIZATIONDATE - NEWDATEOFDOSE2) >= 80 -- minimum 84 days minus 4 days grace
                   )
              THEN 1
              ELSE 0  -- 0 FOR INVALID
              END VALIDDOSE3

FROM REASSESSHPVSCHEDULE
) -- END OF CTE
,
INVALIDHPVDOSE3 AS (
SELECT  PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        IMMUNIZATIONDATE AS INVALIDDOSE3,
        INADVERTENT,
        1 AS INVALIDFLAG
FROM    HPVDOSE3
WHERE   VALIDDOSE3 IN (0) AND NEWDOSE IN (3)
)
-- INSERT FINAL VALIDITY CHECK INTO A VALIDHPVDOSESTABLE
SELECT  ROW_NUMBER() OVER (PARTITION BY HPVDOSE3.PROXY_MRN ORDER BY HPVDOSE3.IMMUNIZATIONDATE) AS NEWDOSE,
        HPVDOSE3.PROXY_MRN,
        HPVDOSE3.PATIENTNAME,
        HPVDOSE3.DOB,
        HPVDOSE3.GENDER,
        HPVDOSE3.IMMUNIZATIONID,
        HPVDOSE3.AGEATADMIN,
        HPVDOSE3.IMMUNIZATIONDATE,
        HPVDOSE3.INADVERTENT,
        HPVDOSE3.NEWAGEOFDOSE1,
        HPVDOSE3.NEWDATEOFDOSE1,
        HPVDOSE3.VALIDDOSE1,
        HPVDOSE3.NEWDATEOFDOSE2,
        HPVDOSE3.VALIDDOSE2,
        HPVDOSE3.VALIDDOSE3,
        INVALIDHPVDOSE3.INVALIDDOSE3,
        INVALIDHPVDOSE3.INVALIDFLAG,
        HPVDOSE3.RULEINDEX,
        HPVDOSE3.SCHEDULETYPEID,
        COUNT(DISTINCT HPVDOSE3.IMMUNIZATIONDATE) OVER (PARTITION BY HPVDOSE3.PROXY_MRN) AS HPVCOUNT
        
FROM    HPVDOSE3
LEFT OUTER JOIN INVALIDHPVDOSE3 ON HPVDOSE3.PROXY_MRN = INVALIDHPVDOSE3.PROXY_MRN

WHERE   ( (VALIDDOSE1 IN (1) AND NEWDOSE IN (1) )
   OR     (VALIDDOSE2 IN (1) AND NEWDOSE IN (2) )
   OR     (VALIDDOSE3 IN (1) AND NEWDOSE IN (3) )
   OR      NEWDOSE > 3
        ) 
;

MERGE INTO HPVCOHORT COHORT
USING (
SELECT    VALIDHPVDOSES.PROXY_MRN,
          VALIDHPVDOSES.DOB,
          COUNT(DISTINCT IMMUNIZATIONDATE) VCOUNT
FROM      VALIDHPVDOSES VALIDHPVDOSES
GROUP BY  PROXY_MRN, DOB
) VALIDHPV ON (COHORT.PROXY_MRN = VALIDHPV.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET COHORT.VALIDHPVCOUNT = VALIDHPV.VCOUNT;
/*SELECT * FROM HPVCOHORT WHERE HPVCOUNT > 0 AND VALIDHPVCOUNT IS NULL
SHOULD EQUAL 0*/
COMMIT;
-- FINAL QUERY TO BE USED FOR INSERTING VALUES
MERGE INTO HPVCOHORT COHORT
USING (
WITH INADVERTENTMAX AS (
SELECT    PROXY_MRN,
          MAX(IMMUNIZATIONDATE) AS LASTINADVDOSE
          
FROM      YCHEUNG.HPVDOSES
WHERE     INADVERTENT IN (1) -- FLAG INADVERTENT HPV DOSES GIVEN TO MALES
GROUP BY  PROXY_MRN
)
,
RECALCHPVDOSE3AND4 AS (
SELECT  NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        INADVERTENT,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        VALIDDOSE1,
        NEWDATEOFDOSE2,
        VALIDDOSE2,
        (SELECT IMMUNIZATIONDATE FROM VALIDHPVDOSES T3 WHERE (VALIDHPVDOSES.PROXY_MRN = T3.PROXY_MRN AND T3.NEWDOSE IN (3)) ) AS NEWDATEOFDOSE3,
        VALIDDOSE3,
        (SELECT IMMUNIZATIONDATE FROM VALIDHPVDOSES T4 WHERE (VALIDHPVDOSES.PROXY_MRN = T4.PROXY_MRN AND T4.NEWDOSE IN (4)) ) AS NEWDATEOFDOSE4,
        INVALIDDOSE3,
        INVALIDFLAG,
        HXSCH2.RULEINDEX,
        HXSCH2.SCHEDULETYPEID,
        HPVCOUNT
FROM YCHEUNG.VALIDHPVDOSES VALIDHPVDOSES

LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE HXSCH2

  ON (  
-- JOIN TO 3-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS <= 4.8387 (SCHEDULEINTERVAL3DOSE)
        (HXSCH2.PRIORDOSE = (VALIDHPVDOSES.NEWDOSE - 1)
         AND MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1) <= HXSCH2.SCHEDULEINTERVAL3DOSE)
         AND MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1) NOT IN (0)
         )
      OR
-- JOIN TO 2-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS >= 4.8709 (SCHEDULEINTERVAL2DOSE) AND AGEOFDOSE1 < 15 YEARS OLD
        (   (HXSCH2.PRIORDOSE = (VALIDHPVDOSES.NEWDOSE - 1)
            AND (MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1) >= HXSCH2.SCHEDULEINTERVAL2DOSE 
                 OR MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1) IN (0) 
                 OR MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1) IS NULL
                )
            AND VALIDHPVDOSES.NEWAGEOFDOSE1 <= HXSCH2.INITAGEMAX 
            AND VALIDHPVDOSES.NEWAGEOFDOSE1 >= HXSCH2.INITAGEMIN
            )
         ) 
      OR
--JOIN TO 3-DOSE SCHEDULE IF INTERVAL BETWEEN DOSE 1 AND 2 IS >= 4.8709 (SCHEDULEINTERVALMISC) AND AGEOFDOSE 1 >= 15 YEARS OLD
        (HXSCH2.PRIORDOSE  =  (VALIDHPVDOSES.NEWDOSE - 1)
         AND MONTHS_BETWEEN(NEWDATEOFDOSE2, NEWDATEOFDOSE1) >= HXSCH2.SCHEDULEINTERVALMISC
         AND VALIDHPVDOSES.NEWAGEOFDOSE1 >= HXSCH2.INITAGEMIN )
)        
,
FORECAST AS (
SELECT  NEWDOSE,
        PROXY_MRN,
        PATIENTNAME,
        DOB,
        GENDER,
        IMMUNIZATIONID,
        AGEATADMIN,
        IMMUNIZATIONDATE,
        NEWAGEOFDOSE1,
        NEWDATEOFDOSE1,
        NEWDATEOFDOSE2,
        NEWDATEOFDOSE3,
        NEWDATEOFDOSE4,
        INVALIDDOSE3,
        INVALIDFLAG,
        FORECASTDOSE,
        FORECASTSCH.RULEINDEX,
        FORECASTSCH.SCHEDULETYPEID,
        FORECASTSCH.RECINTERVALFROMPREV,
        RECALCHPVDOSE3AND4.VALIDDOSE1,
        RECALCHPVDOSE3AND4.VALIDDOSE2,
        RECALCHPVDOSE3AND4.VALIDDOSE3,
        FORECASTSCH.MININTERVALFROMDOSE1,
        FORECASTSCH.INTERVALS,
        FORECASTSCH.MININTERVALFROMDOSE1AND2,
        ADD_MONTHS(NEWDATEOFDOSE1, MININTERVALFROMDOSE1),
        (IMMUNIZATIONDATE + MININTERVALFROMDOSE2AND3),
------- ADD FOR EARLIEST DATE FOR DOSE 2----------------------------------------
        CASE  WHEN FORECASTSCH.FORECASTDOSE IN ('2')
              THEN
                -- DOSE 2, 2-DOSE SCHEDULE, MININTERVAL: 5 MONTHS/4.848 MONTHS
                CASE  WHEN  FORECASTSCH.SCHEDULETYPEID IN (2)
                      THEN  ADD_MONTHS(NEWDATEOFDOSE1, MININTERVALFROMDOSE1)
                -- DOSE 2, 3-DOSE SCHEDULE, MININTERVAL: 28 DAYS
                      WHEN  FORECASTSCH.SCHEDULETYPEID IN (3)
                      THEN  (NEWDATEOFDOSE1 + MININTERVALFROMDOSE1)
                      END
                ELSE  NULL
                END   "EARLIESTDATEDOSE2",
------- ADD FOR RECOMMENDED DATE FOR DOSE 2 ------------------------------------       
        CASE  WHEN FORECASTSCH.FORECASTDOSE IN ('2')
              THEN
                -- DOSE 2, 2-DOSE SCHEDULE, RECINTERVAL: 6 MONTHS
                CASE  WHEN  FORECASTSCH.SCHEDULETYPEID IN (2)
                      THEN  ADD_MONTHS(NEWDATEOFDOSE1, RECINTERVALFROMPREV)
                -- DOSE 2, 3-DOSE SCHEDULE, RECINTERVAL: 2 MONTHS
                      WHEN  FORECASTSCH.SCHEDULETYPEID IN (3)
                      THEN  ADD_MONTHS(NEWDATEOFDOSE1, RECINTERVALFROMPREV)
                      END
                ELSE  NULL
                END   "RECOMMENDEDDATEDOSE2",
------- ADD FOR EARLIEST DATE FOR DOSE 3 ---------------------------------------
        CASE  WHEN FORECASTSCH.FORECASTDOSE IN ('3')
              THEN
                CASE  WHEN  (INVALIDFLAG IS NULL OR (INVALIDDOSE3 < NEWDATEOFDOSE4) OR (INVALIDDOSE3 < NEWDATEOFDOSE3) )
                      THEN
                        -- 3-DOSE SCHEDULE: EVAL DOSE 3 WHEN (DOSE 1 + 5 MONTHS) HAS A LATER DATE THAN (DOSE 2 + 84 DAYS)
                        CASE  WHEN ((ADD_MONTHS(NEWDATEOFDOSE1, MININTERVALFROMDOSE1) >= (IMMUNIZATIONDATE + MININTERVALFROMDOSE2AND3))
                                    )
                              THEN ADD_MONTHS(NEWDATEOFDOSE1, MININTERVALFROMDOSE1)
                        -- 3-DOSE SCHEDULE: EVAL DOSE 3 WHEN (DOSE 1 + 5 MONTHS) HAS AN EARLIER DATE THAN (DOSE 2 + 84 DAYS)
                              WHEN  ((ADD_MONTHS(NEWDATEOFDOSE1, MININTERVALFROMDOSE1) < (IMMUNIZATIONDATE + MININTERVALFROMDOSE2AND3))
                                    )
                              THEN  ( IMMUNIZATIONDATE + MININTERVALFROMDOSE2AND3) 
                              END
                        -- 3-DOSE SCHEDULE: EVAL DOSE 3 + 12 WEEKS FROM DATE OF PREVIOUS INVALID DOSE       
                      ELSE    (INVALIDDOSE3 + MININTERVALFROMDOSE2AND3) 
                      END
              ELSE NULL
              END "EARLIESTDATEDOSE3",
------- ADD FOR RECOMMENDED DATE FOR DOSE 3 ------------------------------------ 
        CASE  WHEN FORECASTSCH.FORECASTDOSE IN ('3')
              THEN
                CASE  WHEN (INVALIDFLAG IS NULL OR (INVALIDDOSE3 < NEWDATEOFDOSE4) OR (INVALIDDOSE3 < NEWDATEOFDOSE3)  )
                      THEN
                        -- 3-DOSE SCHEDULE: EVAL DOSE 3 WHEN (DOSE 1 + 6 MONTHS) HAS A LATER DATE THAN (DOSE 2 + 4 MONTHS)
                        CASE  WHEN ((ADD_MONTHS(NEWDATEOFDOSE1, RECINTERVALFROMDOSE1) >= ADD_MONTHS(IMMUNIZATIONDATE, RECINTERVALFROMPREV))
                                    )
                              THEN ADD_MONTHS(NEWDATEOFDOSE1, RECINTERVALFROMDOSE1)
                        -- 3-DOSE SCHEDULE: EVAL DOSE 3 WHEN (DOSE 1 + 6 MONTHS) HAS AN EARLIER DATE THAN (DOSE 2 + 4MONTHS)
                              WHEN  (ADD_MONTHS(NEWDATEOFDOSE1, RECINTERVALFROMDOSE1) < (ADD_MONTHS(IMMUNIZATIONDATE,RECINTERVALFROMPREV))
                                            )
                              THEN  ADD_MONTHS(IMMUNIZATIONDATE, RECINTERVALFROMPREV)  
                              END
                        -- 3-DOSE SCHEDULE: EVAL DOSE 3 + 4 MONTHS FROM DATE OF PREVIOUS INVALID DOSE
                      ELSE    ADD_MONTHS(INVALIDDOSE3,RECINTERVALFROMPREV)
                      END
              ELSE NULL
              END "RECOMMENDEDDATEDOSE3",
        HPVCOUNT
                                        
FROM    RECALCHPVDOSE3AND4
LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE FORECASTSCH
                    
  ON (  FORECASTSCH.DOSE = RECALCHPVDOSE3AND4.NEWDOSE
    AND FORECASTSCH.SCHEDULETYPEID = RECALCHPVDOSE3AND4.SCHEDULETYPEID  )   

ORDER BY RECALCHPVDOSE3AND4.PROXY_MRN, RECALCHPVDOSE3AND4.NEWDOSE  
)

SELECT  FC1.NEWDOSE,
        FC1.PROXY_MRN,
        FC1.PATIENTNAME,
        FC1.DOB, 
        FC1.GENDER,
        FC1.NEWAGEOFDOSE1   AS AGEOFDOSE1,
        FC1.NEWDATEOFDOSE1  AS DATEOFDOSE1,
        FC1.VALIDDOSE1,
        FC1.NEWDATEOFDOSE2  AS DATEOFDOSE2,
        FC1.VALIDDOSE2,
        FC1.NEWDATEOFDOSE3  AS DATEOFDOSE3,
        FC1.VALIDDOSE3,
        FC1.NEWDATEOFDOSE4  AS DATEOFDOSE4,
        FC1.FORECASTDOSE,
        FC1.HPVCOUNT AS "COUNT OF VALID HPV DOSES",
        ROW_NUMBER() OVER (PARTITION BY FC1.PROXY_MRN ORDER BY FC1.FORECASTDOSE, FC1.NEWDOSE DESC) AS SEQ,
        -- EVALUATES THE FIRST NON-NULL DATE IN DESC (FIRST LISTED)
        CASE  WHEN (INADVERTENTMAX.LASTINADVDOSE > COALESCE(FC1.EARLIESTDATEDOSE3,FC1.EARLIESTDATEDOSE2) )
              THEN INADVERTENTMAX.LASTINADVDOSE
              ELSE COALESCE(FC1.EARLIESTDATEDOSE3,FC1.EARLIESTDATEDOSE2)
              END  "EARLIESTDATE", 
        CASE  WHEN (INADVERTENTMAX.LASTINADVDOSE > COALESCE(FC1.RECOMMENDEDDATEDOSE3,FC1.RECOMMENDEDDATEDOSE2) )
              THEN INADVERTENTMAX.LASTINADVDOSE
              ELSE COALESCE(FC1.RECOMMENDEDDATEDOSE3,FC1.RECOMMENDEDDATEDOSE2) 
              END "RECOMMENDEDDATE"
              
FROM FORECAST FC1
LEFT OUTER JOIN INADVERTENTMAX ON FC1.PROXY_MRN = INADVERTENTMAX.PROXY_MRN

WHERE FC1.FORECASTDOSE = ( SELECT MAX(FORECASTDOSE) 
                           FROM FORECAST FC2 
                           WHERE FC1.PROXY_MRN = FC2.PROXY_MRN )

) FC2 ON ( FC2.PROXY_MRN = COHORT.PROXY_MRN AND FC2.SEQ = 1)
WHEN MATCHED THEN UPDATE SET  COHORT.FORECASTDOSE    = FC2.FORECASTDOSE,
                              COHORT.EARLIESTDATE    = FC2.EARLIESTDATE,
                              COHORT.RECOMMENDEDDATE = FC2.RECOMMENDEDDATE
/* COUNT ENTRIES FROM ABOVE QUERY AND ADD TO PATIENTS WITH 0 HPV DOSES, SHOULD
TOTAL*/
; 
COMMIT;

-- CASE WHEN HPVCOUNT IS 0 THEN USE THIS CTE TO FORECAST THE FIRST HPV DOSE
MERGE INTO HPVCOHORT COHORT
USING (
SELECT  VALIDDOSE0.PROXY_MRN,
        VALIDDOSE0.PATIENTNAME,
        VALIDDOSE0.DOB,
        VALIDDOSE0.GENDER,
        VALIDDOSE0.DOSE,
        VALIDDOSE0.AGEOFDOSE1,
        FORECASTSCH.FORECASTDOSE,
---EARLIEST DATE --------------------------------------------------------------
        CASE  WHEN    (NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD')) >= ADD_MONTHS(VALIDDOSE0.DOB, MINAGE*12))
               THEN   NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD'))
               ELSE   ADD_MONTHS(VALIDDOSE0.DOB, MINAGE*12)
              END "EARLIESTDATE",
---RECOMMENDED DATE ------------------------------------------------------------
        -- GREATEST DATE: DATE OF INVALID IMMUNIZATIONDATE
        CASE  WHEN    (NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD')) >= ADD_MONTHS(VALIDDOSE0.DOB, MINAGE*12)
                      AND NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD')) >= ADD_MONTHS(VALIDDOSE0.DOB,RECINTERVALFROMPREV))
               THEN   NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD'))
        -- GREATEST DATE: DATE OF MINIMUM AGE
              WHEN    (ADD_MONTHS(VALIDDOSE0.DOB,MINAGE*12) >= NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD'))
                      AND ADD_MONTHS(VALIDDOSE0.DOB,MINAGE*12) >= ADD_MONTHS(VALIDDOSE0.DOB,RECINTERVALFROMPREV))
                THEN  ADD_MONTHS(VALIDDOSE0.DOB,MINAGE*12)
        -- GREATEST DATE: DATE OF RECOMMENDED INTERVAL FROM INVALID DATE
              WHEN    (ADD_MONTHS(VALIDDOSE0.DOB,RECINTERVALFROMPREV) >= NVL(VALIDDOSE0.IMMUNIZATIONDATE, TO_DATE('1901-01-01','YYYY-MM-DD'))
                      AND ADD_MONTHS(VALIDDOSE0.DOB,RECINTERVALFROMPREV) >= ADD_MONTHS(VALIDDOSE0.DOB, MINAGE*12) )
                THEN  ADD_MONTHS(VALIDDOSE0.DOB,RECINTERVALFROMPREV)
              ELSE NULL
              END "RECOMMENDEDDATE"
FROM (
SELECT  COHORTI.PROXY_MRN,  
        COHORTI.PATIENTNAME,
        COHORTI.DOB,
        COHORTI.GENDER,
        COHORTI.HPVCOUNT,
        CAST (0 AS NUMBER) AS DOSE,
        INADV.IMMUNIZATIONDATE,
        TRUNC(MONTHS_BETWEEN( TO_DATE('2000-09-30','YYYY-MM-DD'), COHORTI.DOB)/12) AS AGEOFDOSE1

FROM  YCHEUNG.HPVCOHORT COHORTI

LEFT OUTER JOIN (SELECT MAX(IMMUNIZATIONDATE) AS IMMUNIZATIONDATE,
                        PROXY_MRN
                 FROM HPVDOSES
                 WHERE INADVERTENT IN (1)
                 GROUP BY PROXY_MRN ) INADV ON COHORTI.PROXY_MRN = INADV.PROXY_MRN
    
WHERE (COHORTI.HPVCOUNT > 0 AND (VALIDHPVCOUNT IS NULL OR VALIDHPVCOUNT IN (0)) ) 

) VALIDDOSE0

LEFT OUTER JOIN YCHEUNG.VACCINESCHEDULE FORECASTSCH ON (
                        FORECASTSCH.DOSE = (VALIDDOSE0.DOSE)
                    AND FORECASTSCH.INITAGEMIN <= VALIDDOSE0.AGEOFDOSE1
                    AND FORECASTSCH.INITAGEMAX >= VALIDDOSE0.AGEOFDOSE1
                    )
-- END OF INTERNAL QUERY
) HPVVALIDDOSE0 ON (COHORT.PROXY_MRN = HPVVALIDDOSE0.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET  COHORT.FORECASTDOSE = HPVVALIDDOSE0.FORECASTDOSE,
                              COHORT.EARLIESTDATE = HPVVALIDDOSE0.EARLIESTDATE,
                              COHORT.RECOMMENDEDDATE = HPVVALIDDOSE0.RECOMMENDEDDATE
;
COMMIT;
-- INDICATE THOSE WHO HAVE A RECOMMENDED DATE <= REPORT END DATE AS NOT UTD
-- WHEN RECOMMENDED DATE > REPORT END DATE THEN UTD

MERGE INTO YCHEUNG.HPVCOHORT COHORT
USING (
SELECT  PROXY_MRN,
        DOB,
        CASE  WHEN TRUNC(RECOMMENDEDDATE) <= TRUNC(LASTOFFICVISIT)
              THEN 'NO'
              ELSE 'YES'
              END STATUS
FROM YCHEUNG.HPVCOHORT
) UTD2 ON (UTD2.PROXY_MRN = COHORT.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET COHORT.UPTODATE = UTD2.STATUS;
COMMIT
;
-- INDICATE COMPLETED SERIES AS UTD
MERGE INTO YCHEUNG.HPVCOHORT COHORT
USING (
SELECT  PROXY_MRN,
        DOB,
        FORECASTDOSE,
        'YES' AS STATUS
FROM YCHEUNG.HPVCOHORT 
WHERE FORECASTDOSE IN ('COMPLETE') 
) UTD ON (UTD.PROXY_MRN = COHORT.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET COHORT.UPTODATE = UTD.STATUS;
COMMIT;

MERGE INTO YCHEUNG.HPVCOHORT COHORT
USING (
SELECT  PROXY_MRN,
        DOB,
        CASE  WHEN RECOMMENDEDDATE <= TO_DATE('2000-09-30','YYYY-MM-DD')
              THEN 'NO'
              ELSE 'YES'
              END STATUS
FROM YCHEUNG.HPVCOHORT
) UTD2 ON (UTD2.PROXY_MRN = COHORT.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET COHORT.UPTODATE = UTD2.STATUS;
COMMIT
;
-- ADD FORECASTDOSE OF 1 FOR PATIENTS WITH 0 AS TOTALHPVCOUNT
MERGE INTO YCHEUNG.HPVCOHORT COHORT
USING (
SELECT  PROXY_MRN,
        DOB,
        '1' AS FORECASTDOSE
FROM YCHEUNG.HPVCOHORT COHORT
WHERE HPVCOUNT IN (0) AND FORECASTDOSE IS NULL
) FORECAST1  ON (FORECAST1.PROXY_MRN = COHORT.PROXY_MRN)
WHEN MATCHED THEN UPDATE SET COHORT.FORECASTDOSE = FORECAST1.FORECASTDOSE
;
COMMIT
;
/* FINAL CHECK FOR PATIENTS WITH MORE THAN 3 DOSES AND STILL NOT CONSIDERED COMPLETE
SELECT * FROM HPVCOHORT
WHERE HPVCOUNT >= 5
AND FORECASTDOSE NOT IN ('COMPLETE')
ORDER BY VISITLOCATION, PROXY_MRN
SELECT * FROM IMMUNIZATIONS 
*/